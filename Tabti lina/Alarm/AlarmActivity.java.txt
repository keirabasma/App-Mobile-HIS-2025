package com.example.exo5finale14leena;

import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Bundle;
import android.os.SystemClock;
import android.view.View;
import android.widget.Button;
import android.widget.Chronometer;
import android.widget.TimePicker;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

import java.util.Calendar;

public class AlarmActivity extends AppCompatActivity {

    private TimePicker timePicker;
    private Chronometer chronometer;
    private Button btnStartCounter;
    private Button btnResetCounter;
    private AlarmManager alarmManager;
    private PendingIntent alarmIntent;
    private long baseTime;
    private boolean isRunning = false;
    
 

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
       
        timePicker = findViewById(R.id.timePicker);
        chronometer = findViewById(R.id.chronometer);
        btnStartCounter = findViewById(R.id.btnStartCounter);
        btnResetCounter = findViewById(R.id.btnResetCounter);
        
        
        alarmManager = (AlarmManager) getSystemService(Context.ALARM_SERVICE);
        
        btnStartCounter.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (!isRunning) {
                    startAlarm();
                }
            }
        });
        
       
        btnResetCounter.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                resetChronometer();
            }
        });
    }
    
    private void startAlarm() {
        
        int hour = timePicker.getHour();
        int minute = timePicker.getMinute();
        Calendar currentTime = Calendar.getInstance();
        int currentHour = currentTime.get(Calendar.HOUR_OF_DAY);
        int currentMinute = currentTime.get(Calendar.MINUTE)
        int hourDifference = hour - currentHour;
        int minuteDifference = minute - currentMinute;
        
        if (minuteDifference < 0) {
            minuteDifference += 60;
            hourDifference--;
        }
        
        String toastMessage = String.format(
                getString(R.string.alarm_trigger), 
                hourDifference, 
                minuteDifference);
        Toast.makeText(this, toastMessage, Toast.LENGTH_LONG).show();
        Calendar calendar = Calendar.getInstance();
        calendar.set(Calendar.HOUR_OF_DAY, hour);
        calendar.set(Calendar.MINUTE, minute);
        calendar.set(Calendar.SECOND, 0);
        
      
        Intent intent = new Intent(this, AlarmReceiver.class);
        alarmIntent = PendingIntent.getBroadcast(
                this, 
                0, 
                intent, 
                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
        
     
       r
        baseTime = SystemClock.elapsedRealtime();
        chronometer.setBase(baseTime);
        chronometer.start();
        isRunning = true;
        
        
        btnStartCounter.setEnabled(false);
        btnResetCounter.setEnabled(true);
    }
    
    private void resetChronometer() {
        // Annuler l'alarme si elle existe
        if (alarmManager != null && alarmIntent != null) {
            alarmManager.cancel(alarmIntent);
        }
        
        chronometer.stop();
        chronometer.setBase(SystemClock.elapsedRealtime());
        isRunning = false;
    
        btnStartCounter.setEnabled(true);
        btnResetCounter.setEnabled(false);
    }
    
  
      @Override
    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);
      
        if (intent.getBooleanExtra("RESET_ALARM", false)) {
            resetChronometer();
        }
   
  
    
  